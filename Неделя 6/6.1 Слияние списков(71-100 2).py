# Даны два целочисленных списка A и B, упорядоченных по неубыванию.
# Объедините их в один упорядоченный список С (то есть он должен
# содержать len(A)+len(B) элементов). Решение оформите в виде
# функции merge(A, B), возвращающей новый список. Алгоритм должен
# иметь сложность O(len(A)+len(B)). Модифицировать исходные списки
# запрещается. Использовать функцию sorted и метод sort запрещается.
# Формат ввода
# Программа получает на вход два неубывающих списка, каждый в отдельной строке.
# Формат вывода
# Программа должна вывести последовательность неубывающих
# чисел, полученных объединением двух данных списков.
m1 = list(map(int, input().split()))
m2 = list(map(int, input().split()))


m = m1 + m2
i = 0
i2 = 0
m3 = []
while len(m3) != len(m1 + m2):
    if len(m1) > i:
        if min(m1[-len(m1) + i:]) < min(m2[-len(m2) + i2:]):
            m3.append(min(m1[-len(m1) + i:]))
            i += 1
        else:
            if len(m2) > i2:
                m3.append(min(m2[-len(m2) + i2:]))
                i2 += 1
            else:
                m3.append((m1[i]))
                i += 1
    else:
        m3.append((m2[i2]))
        i2 += 1
print(*m3)
